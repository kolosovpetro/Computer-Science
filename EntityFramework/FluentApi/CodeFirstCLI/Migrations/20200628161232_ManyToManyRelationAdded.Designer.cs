// <auto-generated />
using System;
using CodeFirstCLI.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CodeFirstCLI.Migrations
{
    [DbContext(typeof(UserContext))]
    [Migration("20200628161232_ManyToManyRelationAdded")]
    partial class ManyToManyRelationAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("CodeFirstCLI.Models.Address", b =>
                {
                    b.Property<int?>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("address_id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AptNumber")
                        .HasColumnName("apt_number")
                        .HasColumnType("integer");

                    b.Property<string>("City")
                        .HasColumnName("city")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnName("country")
                        .HasColumnType("text");

                    b.Property<int>("HouseNumber")
                        .HasColumnName("house_number")
                        .HasColumnType("integer");

                    b.Property<int>("PostCode")
                        .HasColumnName("post_code")
                        .HasColumnType("integer");

                    b.Property<string>("Street")
                        .HasColumnName("street")
                        .HasColumnType("text");

                    b.HasKey("AddressId");

                    b.ToTable("address");

                    b.HasData(
                        new
                        {
                            AddressId = 1,
                            AptNumber = 17,
                            City = "Poznan",
                            Country = "PL",
                            HouseNumber = 121,
                            PostCode = 1337,
                            Street = "Polweiska str."
                        });
                });

            modelBuilder.Entity("CodeFirstCLI.Models.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("subscription_id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ResourceName")
                        .HasColumnName("resource_name")
                        .HasColumnType("text");

                    b.Property<int>("Yaer")
                        .HasColumnName("year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("subscriptions");
                });

            modelBuilder.Entity("CodeFirstCLI.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("team_id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("TeamName")
                        .HasColumnName("team_name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TeamName = "WSB Dream team"
                        });
                });

            modelBuilder.Entity("CodeFirstCLI.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("user_id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AddressId")
                        .HasColumnName("address_id")
                        .HasColumnType("integer");

                    b.Property<string>("FirstName")
                        .HasColumnName("firstname")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnName("lastname")
                        .HasColumnType("text");

                    b.Property<int>("TeamId")
                        .HasColumnName("team_id")
                        .HasColumnType("integer");

                    b.HasKey("UserId")
                        .HasName("user_pkey");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.HasIndex("TeamId");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            FirstName = "Ivan",
                            LastName = "Ivanov",
                            TeamId = 1
                        },
                        new
                        {
                            UserId = 2,
                            FirstName = "Alex",
                            LastName = "Ivanov",
                            TeamId = 1
                        },
                        new
                        {
                            UserId = 3,
                            FirstName = "Georgii",
                            LastName = "Ivanov",
                            TeamId = 1
                        },
                        new
                        {
                            UserId = 4,
                            AddressId = 1,
                            FirstName = "Michail",
                            LastName = "Ivanov",
                            TeamId = 1
                        });
                });

            modelBuilder.Entity("CodeFirstCLI.Models.UserSubscription", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("integer");

                    b.Property<int>("SubscriptionId")
                        .HasColumnName("subscription_id")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "SubscriptionId");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("user_subscriptions");
                });

            modelBuilder.Entity("CodeFirstCLI.Models.User", b =>
                {
                    b.HasOne("CodeFirstCLI.Models.Address", "Address")
                        .WithOne("User")
                        .HasForeignKey("CodeFirstCLI.Models.User", "AddressId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CodeFirstCLI.Models.Team", "Team")
                        .WithMany("TeamMembers")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CodeFirstCLI.Models.UserSubscription", b =>
                {
                    b.HasOne("CodeFirstCLI.Models.Subscription", "Subscription")
                        .WithMany("Subscriptions")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodeFirstCLI.Models.User", "User")
                        .WithMany("Subscriptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
